os.loadAPI("coreNetwork")
coreNetwork.login()
term.clear()
term.setCursorPos(1,1)
print("Chatserver starting.")
print("Chatroom name: "..os.getComputerLabel())
local list = {}

function broadcastMessage(mess,sender)
 for key,value in pairs(list) do
if value ~= sender then
coreNetwork.sendMessage(value,mess)
end
end 
end

function table.contains(table, element)
  for _, value in pairs(table) do
    if value == element then
      return true
    end
  end
  return false
end
 
while true do
    local event, a,b,c = coreNetwork.pullEvent()
   if event == "network_message" then
        -- a is the message
        -- b is the sender
        -- c is the destination
        dec_message = coreUtils.Split(a,":")
        if dec_message[0] == "join" then
            if not table.contains(list, b) then
            table.insert(list,1,b)
            end
            coreNetwork.sendMessage(b,"joined")
            broadcastMessage(b.." joined.",b)
            print(b.." Joined")
        elseif dec_message[0] == "leave" then
            broadcastMessage(b.." left.",b)
            print(b.." Left")
            repeat
            key = nil
            for index,value in pairs(list) do                
                if tostring(value) == tostring(b) then
                    key = index                                     
                end                
            end
            if key ~= nil then
            table.remove(list,key)   
            end
            until key == nil
        elseif dec_message[0] == "text" then
            broadcastMessage(b..": "..dec_message[1],b)
        elseif dec_message[0] == "list" then
            for key,value in pairs(list) do
               coreNetwork.sendMessage(b,value)
        end
    end
end
end