function file_exists(name)
    local f = io.open(name,"r")
    if f~= nil then 
        io.close(f)
        return true
        else
        return false
    end
end

function switch(w1,w2)
    return (string.sub(w2,1,1) ~= "/")
end

os.loadAPI("coreNetwork")
coreNetwork.login()

if not fs.exists("public") then fs.makeDir("public") end
print("File server running. Name: "..os.getComputerLabel())

while true do
    event, message, sender, target = coreNetwork.pullEvent()
    if event == "network_message" then
        dec = coreUtils.Split(message,":")
        if dec[0] == "ls" then
            local tabel = fs.list("public/"..dec[1])
            for key,value in pairs(tabel) do
                if fs.isDir("public/"..value) then
                    tabel[key] = "/"..value
                end                
            end
            table.sort(tabel,switch)            
            
            data = textutils.serialize(tabel)
            coreNetwork.sendMessage(sender, "ls:"..data)
            elseif dec[0] == "get" then
            
            if file_exists("public/"..dec[1]) then
                local data = {}
                local f = io.open("public/"..dec[1],"r")
                for line in f:lines() do
                    table.insert(data,line)
                end
                f:close()
                coreNetwork.sendMessage(sender, "file:"..textutils.serialize(data))
                print("Sending "..dec[1].." to "..sender)
                else
                coreNetwork.sendMessage(sender, "get:failed")
                print("File not found, "..sender)
            end
            elseif dec[0] == "hello" then
            coreNetwork.sendMessage(sender, "hi")
            elseif dec[0] == "post" then           
            local man = textutils.unserialize(dec[1])
            local f = io.open("public/"..man["name"],"w")
            for _,value in pairs(textutils.unserialize(man["data"])) do f:write(value.."\n") end
            f:close()
            print("Received: "..man["name"])
            elseif dec[0] == "del" then
            fs.delete("public/"..dec[1])
            print(sender.." removed "..dec[1])
            elseif dec[0] == "mkdir" then
            fs.makeDir("public/"..dec[1])
            print(sender.." removed "..dec[1])
        end
    end
end

coreNetwork.logout()